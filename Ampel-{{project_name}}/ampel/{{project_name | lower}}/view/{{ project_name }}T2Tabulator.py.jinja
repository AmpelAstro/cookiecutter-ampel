from collections.abc import Iterable, Sequence

import numpy as np
from astropy.table import Table

from ampel.content.DataPoint import DataPoint
from ampel.view.BaseT2Tabulator import BaseT2Tabulator

BANDPASSES = {k: f"{{ project_name | lower }}{k}" for k in "ugrizy"}


class {{ project_name }}T2Tabulator(BaseT2Tabulator):
    zp: float

    # datapoint selection tags: lower index -> higher priority
    tags: Sequence[str | int] = ["{{ project_name | upper }}_FP", "{{ project_name | upper }}_DP"]
    # epoch format
    epoch: BaseT2Tabulator.EpochFormat = BaseT2Tabulator.EpochFormat(
        key="midpointMjdTai", format="mjd", identifier="visit",
    )

    """ """

    def get_flux_table(
        self,
        dps: Iterable[DataPoint],
    ) -> Table:
        flux, fluxerr, filtername, tai = self.get_values(
            dps,
            ["psfFlux", "psfFluxErr", "band", "midpointMjdTai"],
        )
        filters = list(map(BANDPASSES.get, filtername))

        return Table(
            {
                "time": np.asarray(tai) + 2400000.5,
                "flux": flux,
                "fluxerr": fluxerr,
                "band": filters,
                "zp": [self.zp] * len(filters),
                "zpsys": ["ab"] * len(filters),
            },
            dtype=("float64", "float64", "float64", "str", "float64", "str"),
        )
